import { defineNuxtModule, createResolver, addComponent } from '@nuxt/kit';
import { join } from 'pathe';
import { kebabCase } from 'scule';
import * as icons from 'lucide-vue-next';

const module = defineNuxtModule({
  meta: {
    name: "lucide",
    configKey: "lucide",
    compatibility: {
      nuxt: ">=3.3.0"
    }
  },
  defaults: {
    namePrefix: "Lucide"
  },
  async setup(options) {
    const { resolvePath } = createResolver(import.meta.url);
    const entrypoint = await resolvePath("lucide-vue-next");
    const root = join(entrypoint, "../../..");
    const priorities = /* @__PURE__ */ new Map();
    Object.keys(icons).filter((icon) => icon !== "default").filter((icon) => !icon.startsWith("Lucide")).filter((icon) => !icon.endsWith("Icon")).forEach((icon) => {
      const key = kebabCase(icon);
      const priority = (priorities.get(key) ?? -1) + 1;
      addComponent({
        name: options.namePrefix + icon,
        export: icon,
        filePath: root,
        priority
      });
      priorities.set(key, priority);
    });
  }
});

export { module as default };
